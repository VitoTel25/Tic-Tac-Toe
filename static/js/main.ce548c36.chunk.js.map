{"version":3,"sources":["index.js"],"names":["winCases","Square","value","onClick","className","Board","useState","isCirclePlayer","setIsCirclePlayer","playLog","setPlayLog","console","log","checkWin","pValue","indexList","filter","item","map","index","some","winCase","every","num","ii","playerValue","winner","gameStatus","renderSquare","find","prevLog","prev","Game","ReactDOM","render","document","getElementById"],"mappings":"oMAOMA,EAAW,CACf,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGHC,EAAS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACvB,OACE,wBAAQC,UAAU,SAASD,QAASA,EAApC,SACGD,GAAS,MAKVG,EAAQ,WAAO,IAAD,EAC0BC,oBAAS,GADnC,mBACXC,EADW,KACKC,EADL,OAEYF,mBAAS,IAFrB,mBAEXG,EAFW,KAEFC,EAFE,KAGlBC,QAAQC,IAAI,kBAAmBH,GAE/B,IAAMI,EAAW,SAACC,GAChB,IAAMC,EAAYN,EAAQO,QAAO,SAAAC,GAAI,OAAIA,EAAKf,QAAUY,KAAQI,KAAI,SAAAD,GAAI,OAAIA,EAAKE,SAEjF,OADcnB,EAASoB,MAAK,SAAAC,GAAO,OAAIA,EAAQC,OAAM,SAAAC,GAAG,OAAIR,EAAUK,MAAK,SAAAI,GAAE,OAAIA,IAAOD,YAapFE,EAAclB,EA1CM,IACD,IA0CnBmB,EATAb,EAlCoB,SAoCbA,EAnCY,SAsChB,KAKHc,EAAaD,EAAM,qBAAiBA,EAAjB,qCAAsDD,GAEzEG,EAAe,SAACT,GAAW,IAAD,EACxBjB,EAAK,UAAGO,EAAQoB,MAAK,SAAAZ,GAAI,OAAIA,EAAKE,QAAUA,YAAvC,aAAG,EAA4CjB,MAS1D,OACE,cAACD,EAAD,CAAQC,MAAOA,EAAOC,QATJ,WACdD,GAASwB,IAGbhB,GAAW,SAACoB,GAAD,4BAAmBA,GAAnB,CAA4B,CAAEX,QAAOjB,MAAOuB,QACvDjB,GAAkB,SAAAuB,GAAI,OAAKA,UAQ/B,OACE,gCACE,qBAAK3B,UAAU,SAAf,SAAyBuB,IACzB,sBAAKvB,UAAU,YAAf,UACGwB,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKxB,UAAU,YAAf,UACGwB,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKxB,UAAU,YAAf,UACGwB,EAAa,GACbA,EAAa,GACbA,EAAa,UAMhBI,EAAO,WACX,OACE,sBAAK5B,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAD,MAEF,sBAAKD,UAAU,YAAf,UACE,wBACA,8BAQR6B,IAASC,OACP,cAACF,EAAD,IACAG,SAASC,eAAe,W","file":"static/js/main.ce548c36.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst CIRCLE_PLAYER_VALUE = 'O'\nconst CROSS_PLAYER_VALUE = 'X'\n\nconst winCases = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nconst Square = ({ value, onClick }) => {\n  return (\n    <button className=\"square\" onClick={onClick}>\n      {value || ''}\n    </button>\n  );\n}\n\nconst Board = () => {\n  const [isCirclePlayer, setIsCirclePlayer] = useState(false)\n  const [playLog, setPlayLog] = useState([])\n  console.log('Board playLog: ', playLog);\n\n  const checkWin = (pValue) => {\n    const indexList = playLog.filter(item => item.value === pValue).map(item => item.index)\n    const isWin = winCases.some(winCase => winCase.every(num => indexList.some(ii => ii === num)))\n    return isWin\n  }\n\n  const generateWinner = () => {\n    if (checkWin(CIRCLE_PLAYER_VALUE)) {\n      return CIRCLE_PLAYER_VALUE\n    } else if (checkWin(CROSS_PLAYER_VALUE)) {\n      return CROSS_PLAYER_VALUE\n    }\n    return null\n  }\n\n  const playerValue = isCirclePlayer ? CIRCLE_PLAYER_VALUE : CROSS_PLAYER_VALUE\n  const winner = generateWinner()\n  const gameStatus = winner ? `Game over, ${winner} is winner` : `Next player: ${playerValue}`\n\n  const renderSquare = (index) => {\n    const value = playLog.find(item => item.index === index)?.value\n    const handleClick = () => {\n      if (value || winner) {\n        return\n      }\n      setPlayLog((prevLog) => ([ ...prevLog, { index, value: playerValue } ]))\n      setIsCirclePlayer(prev => !prev)\n    }\n\n    return (\n      <Square value={value} onClick={handleClick} />\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"status\">{gameStatus}</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n\nconst Game = () => {\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board />\n      </div>\n      <div className=\"game-info\">\n        <div>{/* status */}</div>\n        <ol>{/* TODO */}</ol>\n      </div>\n    </div>\n  );\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}